name: Advanced Multi Random Uptime Ping

on:
  schedule:
    - cron: "*/15 * * * *"   # ‡¶™‡ßç‡¶∞‡¶§‡¶ø 15 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Run advanced random ping script
        run: |
          echo "üîÑ Starting advanced uptime pinger..."

          # üü¢ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Render ‡¶ì Vercel backend URL ‡¶ó‡ßÅ‡¶≤‡ßã
          URLS="
          https://batteryrechargehubbackend.onrender.com/api/vehicleTypes
          https://battery-recharge-hub.vercel.app/api/vehicleTypes
          "

          # üîπ Summary output file
          SUMMARY_FILE="ping_summary.txt"
          echo "üïí Ping Summary (Run: $(date))" > $SUMMARY_FILE
          echo "---------------------------------" >> $SUMMARY_FILE

          # üî∏ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø URL ‡¶™‡¶ø‡¶Ç ‡¶ï‡¶∞‡¶æ
          IFS=$'\n'
          for URL in $URLS; do
            DELAY=$(( ( RANDOM % 570 ) + 30 )) # random delay 30‚Äì600 sec
            echo "‚è≥ [$URL] will ping after $DELAY seconds..."
            (
              sleep $DELAY
              node -e "
                const https = require('https');
                const http = require('http');
                const url = process.argv[1];
                const lib = url.startsWith('https') ? https : http;

                function ping(attempt = 1) {
                  lib.get(url, res => {
                    console.log('‚úÖ Pinged', url, res.statusCode, 'at', new Date().toLocaleString());
                    require('fs').appendFileSync('ping_summary.txt', '‚úÖ ' + url + ' => ' + res.statusCode + ' (' + new Date().toLocaleString() + ')\\n');
                  }).on('error', err => {
                    console.error('‚ùå Error pinging', url, err.message);
                    if (attempt < 2) {
                      console.log('üîÅ Retrying in 60 seconds...');
                      setTimeout(() => ping(attempt + 1), 60000);
                    } else {
                      require('fs').appendFileSync('ping_summary.txt', '‚ùå ' + url + ' => FAILED after retry (' + err.message + ')\\n');
                    }
                  });
                }

                ping();
              " "$URL"
            ) &
          done

          wait
          echo "---------------------------------" >> $SUMMARY_FILE
          echo "‚úÖ All pings completed at $(date)" >> $SUMMARY_FILE

          echo "üßæ Ping Summary:"
          cat $SUMMARY_FILE

          # ü™Ñ GitHub summary ‡¶§‡ßá ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
          echo "### üîç Render & Vercel Ping Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat $SUMMARY_FILE >> $GITHUB_STEP_SUMMARY
